<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:mvc="http://www.springframework.org/schema/mvc"	
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
 xmlns:context="http://www.springframework.org/schema/context"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd ">

<!-- Render server-side java exceptions to the browser and log files, with a unique reference code, and also optionally with a stack trace for easy troubleshooting --> 
<bean id="exceptionResolver" class="org.catamarancode.spring.mvc.HtmlAndJsonExceptionResolver">
    <property name="productionEnvironmentString" value="false"/>
    <!-- defaults to errorView=error which means you need to have an error.ftl file in /WEB-INF/freemarker/ -->
</bean>


<!-- Tells Spring MVC to keep hibernate sessions open until web requests are complete, thereby enabling use of hibernate lazy loading -->
<!-- TODO: This can probably be removed, using the mvc: xml instead... -->
<bean name="openSessionInViewInterceptor"
 class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
    <property name="sessionFactory">
        <ref bean="sessionFactory"/>
    </property>
</bean>

<!-- Tells Spring MVC to look for web request handlers (controllers) that are marked with a @Controller annotation 
<bean id="annotationMapper" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
	-->
    <!-- make this mapper before  other mappers -->
    <!--
    <property name="order" value="0"/>
    <property name="interceptors">
        <list>
            <ref bean="openSessionInViewInterceptor"/>
        </list>
    </property>
</bean>
-->

<!-- Tells Spring MVC where to look for controller classes marked with an @Controller annotation -->
<context:component-scan base-package="org.catamarancode.connect.web"/>

<!-- Tells freemarker where to look for .FTL files -->
<bean id="freemarkerConfig"
 class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    
    <!-- Proper setting for loading templates form within the webapp -->
    <property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>
    
    <!-- Temporary setting for seeing development changes right away without copying/building to the webapp
    NOTE: Deprecated way.  See build script build_local.sh for a better way
    <property name="templateLoaderPath" value="file:///bh/ws/steward-quality/src/main/webapp/WEB-INF/freemarker/"/>
    -->
</bean>

<!-- Tells Spring MVC to use freemarker to render views -->
<bean id="freemarkerViewResolver"
 class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    <property name="cache" value="true"/>
    <property name="prefix" value=""/>
    <property name="suffix" value=".ftl"/>
    <property name="exposeSpringMacroHelpers" value="true"/>
</bean>

<!-- This tells Spring MVC to look up a specific view by name in the WEB-INF/views.xml file before consulting other viewResolvers -->
<bean name="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
    <property name="order" value="0"/>
</bean>

<!-- Support declarative validation in Controller methods per JSR-303, see http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/validation.html#validation-mvc -->
<mvc:annotation-driven/>

<!-- see http://blog.springsource.org/2009/12/21/mvc-simplifications-in-spring-3-0/ -->
<mvc:interceptors>
    <mvc:interceptor>
        <!-- <mvc:mapping path="/**/*.html" /> -->
        <mvc:mapping path="/**" />
        <bean
            class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactory" />
        </bean>
    </mvc:interceptor>
</mvc:interceptors>

<!-- Use this if you need to inject custom validators, see http://static.springsource.org/spring/docs/3.1.x/spring-framework-reference/html/validation.html#validation-beanvalidation  
<bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/ -->

</beans>
